"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@libp2p";
exports.ids = ["vendor-chunks/@libp2p"];
exports.modules = {

/***/ "(ssr)/./node_modules/@libp2p/interface-peer-id/dist/src/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@libp2p/interface-peer-id/dist/src/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPeerId: () => (/* binding */ isPeerId),\n/* harmony export */   symbol: () => (/* binding */ symbol)\n/* harmony export */ });\nconst symbol = Symbol.for('@libp2p/peer-id');\nfunction isPeerId(other) {\n    return other != null && Boolean(other[symbol]);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxpYnAycC9pbnRlcmZhY2UtcGVlci1pZC9kaXN0L3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ0E7QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc3VtYW5fczJ2aW1ibVxcT25lRHJpdmVcXERlc2t0b3BcXE5GVC1OZXh1c1xcbmV3X2hhcmRoYXRcXG5vZGVfbW9kdWxlc1xcQGxpYnAycFxcaW50ZXJmYWNlLXBlZXItaWRcXGRpc3RcXHNyY1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHN5bWJvbCA9IFN5bWJvbC5mb3IoJ0BsaWJwMnAvcGVlci1pZCcpO1xuZXhwb3J0IGZ1bmN0aW9uIGlzUGVlcklkKG90aGVyKSB7XG4gICAgcmV0dXJuIG90aGVyICE9IG51bGwgJiYgQm9vbGVhbihvdGhlcltzeW1ib2xdKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@libp2p/interface-peer-id/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@libp2p/interfaces/dist/src/errors.js":
/*!************************************************************!*\
  !*** ./node_modules/@libp2p/interfaces/dist/src/errors.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbortError: () => (/* binding */ AbortError),\n/* harmony export */   CodeError: () => (/* binding */ CodeError)\n/* harmony export */ });\n/**\n * When this error is thrown it means an operation was aborted,\n * usually in response to the `abort` event being emitted by an\n * AbortSignal.\n */\nclass AbortError extends Error {\n    code;\n    type;\n    constructor(message = 'The operation was aborted') {\n        super(message);\n        this.code = AbortError.code;\n        this.type = AbortError.type;\n    }\n    static code = 'ABORT_ERR';\n    static type = 'aborted';\n}\nclass CodeError extends Error {\n    code;\n    props;\n    constructor(message, code, props) {\n        super(message);\n        this.code = code;\n        this.name = props?.name ?? 'CodeError';\n        this.props = props ?? {}; // eslint-disable-line @typescript-eslint/consistent-type-assertions\n    }\n}\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxpYnAycC9pbnRlcmZhY2VzL2Rpc3Qvc3JjL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXHN1bWFuX3MydmltYm1cXE9uZURyaXZlXFxEZXNrdG9wXFxORlQtTmV4dXNcXG5ld19oYXJkaGF0XFxub2RlX21vZHVsZXNcXEBsaWJwMnBcXGludGVyZmFjZXNcXGRpc3RcXHNyY1xcZXJyb3JzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogV2hlbiB0aGlzIGVycm9yIGlzIHRocm93biBpdCBtZWFucyBhbiBvcGVyYXRpb24gd2FzIGFib3J0ZWQsXG4gKiB1c3VhbGx5IGluIHJlc3BvbnNlIHRvIHRoZSBgYWJvcnRgIGV2ZW50IGJlaW5nIGVtaXR0ZWQgYnkgYW5cbiAqIEFib3J0U2lnbmFsLlxuICovXG5leHBvcnQgY2xhc3MgQWJvcnRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb2RlO1xuICAgIHR5cGU7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSA9ICdUaGUgb3BlcmF0aW9uIHdhcyBhYm9ydGVkJykge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5jb2RlID0gQWJvcnRFcnJvci5jb2RlO1xuICAgICAgICB0aGlzLnR5cGUgPSBBYm9ydEVycm9yLnR5cGU7XG4gICAgfVxuICAgIHN0YXRpYyBjb2RlID0gJ0FCT1JUX0VSUic7XG4gICAgc3RhdGljIHR5cGUgPSAnYWJvcnRlZCc7XG59XG5leHBvcnQgY2xhc3MgQ29kZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvZGU7XG4gICAgcHJvcHM7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgY29kZSwgcHJvcHMpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgICAgIHRoaXMubmFtZSA9IHByb3BzPy5uYW1lID8/ICdDb2RlRXJyb3InO1xuICAgICAgICB0aGlzLnByb3BzID0gcHJvcHMgPz8ge307IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2NvbnNpc3RlbnQtdHlwZS1hc3NlcnRpb25zXG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@libp2p/interfaces/dist/src/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@libp2p/logger/dist/src/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@libp2p/logger/dist/src/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   disable: () => (/* binding */ disable),\n/* harmony export */   enable: () => (/* binding */ enable),\n/* harmony export */   enabled: () => (/* binding */ enabled),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(ssr)/./node_modules/debug/src/index.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(ssr)/./node_modules/multiformats/src/bases/base58.js\");\n/* harmony import */ var multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/bases/base32 */ \"(ssr)/./node_modules/multiformats/src/bases/base32.js\");\n/* harmony import */ var multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/bases/base64 */ \"(ssr)/./node_modules/multiformats/src/bases/base64.js\");\n\n\n\n\n// Add a formatter for converting to a base58 string\ndebug__WEBPACK_IMPORTED_MODULE_0__.formatters.b = (v) => {\n    return v == null ? 'undefined' : multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_1__.base58btc.baseEncode(v);\n};\n// Add a formatter for converting to a base32 string\ndebug__WEBPACK_IMPORTED_MODULE_0__.formatters.t = (v) => {\n    return v == null ? 'undefined' : multiformats_bases_base32__WEBPACK_IMPORTED_MODULE_2__.base32.baseEncode(v);\n};\n// Add a formatter for converting to a base64 string\ndebug__WEBPACK_IMPORTED_MODULE_0__.formatters.m = (v) => {\n    return v == null ? 'undefined' : multiformats_bases_base64__WEBPACK_IMPORTED_MODULE_3__.base64.baseEncode(v);\n};\n// Add a formatter for stringifying peer ids\ndebug__WEBPACK_IMPORTED_MODULE_0__.formatters.p = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying CIDs\ndebug__WEBPACK_IMPORTED_MODULE_0__.formatters.c = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Datastore keys\ndebug__WEBPACK_IMPORTED_MODULE_0__.formatters.k = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Multiaddrs\ndebug__WEBPACK_IMPORTED_MODULE_0__.formatters.a = (v) => {\n    return v == null ? 'undefined' : v.toString();\n};\nfunction createDisabledLogger(namespace) {\n    const logger = () => { };\n    logger.enabled = false;\n    logger.color = '';\n    logger.diff = 0;\n    logger.log = () => { };\n    logger.namespace = namespace;\n    logger.destroy = () => true;\n    logger.extend = () => logger;\n    return logger;\n}\nfunction logger(name) {\n    // trace logging is a no-op by default\n    let trace = createDisabledLogger(`${name}:trace`);\n    // look at all the debug names and see if trace logging has explicitly been enabled\n    if (debug__WEBPACK_IMPORTED_MODULE_0__.enabled(`${name}:trace`) && debug__WEBPACK_IMPORTED_MODULE_0__.names.map(r => r.toString()).find(n => n.includes(':trace')) != null) {\n        trace = debug__WEBPACK_IMPORTED_MODULE_0__(`${name}:trace`);\n    }\n    return Object.assign(debug__WEBPACK_IMPORTED_MODULE_0__(name), {\n        error: debug__WEBPACK_IMPORTED_MODULE_0__(`${name}:error`),\n        trace\n    });\n}\nfunction disable() {\n    debug__WEBPACK_IMPORTED_MODULE_0__.disable();\n}\nfunction enable(namespaces) {\n    debug__WEBPACK_IMPORTED_MODULE_0__.enable(namespaces);\n}\nfunction enabled(namespaces) {\n    return debug__WEBPACK_IMPORTED_MODULE_0__.enabled(namespaces);\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxpYnAycC9sb2dnZXIvZGlzdC9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMEI7QUFDNEI7QUFDSDtBQUNBO0FBQ25EO0FBQ0EsNkNBQWdCO0FBQ2hCLHFDQUFxQyxnRUFBUztBQUM5QztBQUNBO0FBQ0EsNkNBQWdCO0FBQ2hCLHFDQUFxQyw2REFBTTtBQUMzQztBQUNBO0FBQ0EsNkNBQWdCO0FBQ2hCLHFDQUFxQyw2REFBTTtBQUMzQztBQUNBO0FBQ0EsNkNBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLDZDQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQSw2Q0FBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsNkNBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHdDQUF3QyxLQUFLO0FBQzdDO0FBQ0EsUUFBUSwwQ0FBYSxJQUFJLEtBQUssWUFBWSx3Q0FBVztBQUNyRCxnQkFBZ0Isa0NBQUssSUFBSSxLQUFLO0FBQzlCO0FBQ0EseUJBQXlCLGtDQUFLO0FBQzlCLGVBQWUsa0NBQUssSUFBSSxLQUFLO0FBQzdCO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUCxJQUFJLDBDQUFhO0FBQ2pCO0FBQ087QUFDUCxJQUFJLHlDQUFZO0FBQ2hCO0FBQ087QUFDUCxXQUFXLDBDQUFhO0FBQ3hCO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcc3VtYW5fczJ2aW1ibVxcT25lRHJpdmVcXERlc2t0b3BcXE5GVC1OZXh1c1xcbmV3X2hhcmRoYXRcXG5vZGVfbW9kdWxlc1xcQGxpYnAycFxcbG9nZ2VyXFxkaXN0XFxzcmNcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgeyBiYXNlNThidGMgfSBmcm9tICdtdWx0aWZvcm1hdHMvYmFzZXMvYmFzZTU4JztcbmltcG9ydCB7IGJhc2UzMiB9IGZyb20gJ211bHRpZm9ybWF0cy9iYXNlcy9iYXNlMzInO1xuaW1wb3J0IHsgYmFzZTY0IH0gZnJvbSAnbXVsdGlmb3JtYXRzL2Jhc2VzL2Jhc2U2NCc7XG4vLyBBZGQgYSBmb3JtYXR0ZXIgZm9yIGNvbnZlcnRpbmcgdG8gYSBiYXNlNTggc3RyaW5nXG5kZWJ1Zy5mb3JtYXR0ZXJzLmIgPSAodikgPT4ge1xuICAgIHJldHVybiB2ID09IG51bGwgPyAndW5kZWZpbmVkJyA6IGJhc2U1OGJ0Yy5iYXNlRW5jb2RlKHYpO1xufTtcbi8vIEFkZCBhIGZvcm1hdHRlciBmb3IgY29udmVydGluZyB0byBhIGJhc2UzMiBzdHJpbmdcbmRlYnVnLmZvcm1hdHRlcnMudCA9ICh2KSA9PiB7XG4gICAgcmV0dXJuIHYgPT0gbnVsbCA/ICd1bmRlZmluZWQnIDogYmFzZTMyLmJhc2VFbmNvZGUodik7XG59O1xuLy8gQWRkIGEgZm9ybWF0dGVyIGZvciBjb252ZXJ0aW5nIHRvIGEgYmFzZTY0IHN0cmluZ1xuZGVidWcuZm9ybWF0dGVycy5tID0gKHYpID0+IHtcbiAgICByZXR1cm4gdiA9PSBudWxsID8gJ3VuZGVmaW5lZCcgOiBiYXNlNjQuYmFzZUVuY29kZSh2KTtcbn07XG4vLyBBZGQgYSBmb3JtYXR0ZXIgZm9yIHN0cmluZ2lmeWluZyBwZWVyIGlkc1xuZGVidWcuZm9ybWF0dGVycy5wID0gKHYpID0+IHtcbiAgICByZXR1cm4gdiA9PSBudWxsID8gJ3VuZGVmaW5lZCcgOiB2LnRvU3RyaW5nKCk7XG59O1xuLy8gQWRkIGEgZm9ybWF0dGVyIGZvciBzdHJpbmdpZnlpbmcgQ0lEc1xuZGVidWcuZm9ybWF0dGVycy5jID0gKHYpID0+IHtcbiAgICByZXR1cm4gdiA9PSBudWxsID8gJ3VuZGVmaW5lZCcgOiB2LnRvU3RyaW5nKCk7XG59O1xuLy8gQWRkIGEgZm9ybWF0dGVyIGZvciBzdHJpbmdpZnlpbmcgRGF0YXN0b3JlIGtleXNcbmRlYnVnLmZvcm1hdHRlcnMuayA9ICh2KSA9PiB7XG4gICAgcmV0dXJuIHYgPT0gbnVsbCA/ICd1bmRlZmluZWQnIDogdi50b1N0cmluZygpO1xufTtcbi8vIEFkZCBhIGZvcm1hdHRlciBmb3Igc3RyaW5naWZ5aW5nIE11bHRpYWRkcnNcbmRlYnVnLmZvcm1hdHRlcnMuYSA9ICh2KSA9PiB7XG4gICAgcmV0dXJuIHYgPT0gbnVsbCA/ICd1bmRlZmluZWQnIDogdi50b1N0cmluZygpO1xufTtcbmZ1bmN0aW9uIGNyZWF0ZURpc2FibGVkTG9nZ2VyKG5hbWVzcGFjZSkge1xuICAgIGNvbnN0IGxvZ2dlciA9ICgpID0+IHsgfTtcbiAgICBsb2dnZXIuZW5hYmxlZCA9IGZhbHNlO1xuICAgIGxvZ2dlci5jb2xvciA9ICcnO1xuICAgIGxvZ2dlci5kaWZmID0gMDtcbiAgICBsb2dnZXIubG9nID0gKCkgPT4geyB9O1xuICAgIGxvZ2dlci5uYW1lc3BhY2UgPSBuYW1lc3BhY2U7XG4gICAgbG9nZ2VyLmRlc3Ryb3kgPSAoKSA9PiB0cnVlO1xuICAgIGxvZ2dlci5leHRlbmQgPSAoKSA9PiBsb2dnZXI7XG4gICAgcmV0dXJuIGxvZ2dlcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2dnZXIobmFtZSkge1xuICAgIC8vIHRyYWNlIGxvZ2dpbmcgaXMgYSBuby1vcCBieSBkZWZhdWx0XG4gICAgbGV0IHRyYWNlID0gY3JlYXRlRGlzYWJsZWRMb2dnZXIoYCR7bmFtZX06dHJhY2VgKTtcbiAgICAvLyBsb29rIGF0IGFsbCB0aGUgZGVidWcgbmFtZXMgYW5kIHNlZSBpZiB0cmFjZSBsb2dnaW5nIGhhcyBleHBsaWNpdGx5IGJlZW4gZW5hYmxlZFxuICAgIGlmIChkZWJ1Zy5lbmFibGVkKGAke25hbWV9OnRyYWNlYCkgJiYgZGVidWcubmFtZXMubWFwKHIgPT4gci50b1N0cmluZygpKS5maW5kKG4gPT4gbi5pbmNsdWRlcygnOnRyYWNlJykpICE9IG51bGwpIHtcbiAgICAgICAgdHJhY2UgPSBkZWJ1ZyhgJHtuYW1lfTp0cmFjZWApO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihkZWJ1ZyhuYW1lKSwge1xuICAgICAgICBlcnJvcjogZGVidWcoYCR7bmFtZX06ZXJyb3JgKSxcbiAgICAgICAgdHJhY2VcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkaXNhYmxlKCkge1xuICAgIGRlYnVnLmRpc2FibGUoKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmFibGUobmFtZXNwYWNlcykge1xuICAgIGRlYnVnLmVuYWJsZShuYW1lc3BhY2VzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlbmFibGVkKG5hbWVzcGFjZXMpIHtcbiAgICByZXR1cm4gZGVidWcuZW5hYmxlZChuYW1lc3BhY2VzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@libp2p/logger/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@libp2p/peer-id/dist/src/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@libp2p/peer-id/dist/src/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPeerId: () => (/* binding */ createPeerId),\n/* harmony export */   peerIdFromBytes: () => (/* binding */ peerIdFromBytes),\n/* harmony export */   peerIdFromCID: () => (/* binding */ peerIdFromCID),\n/* harmony export */   peerIdFromKeys: () => (/* binding */ peerIdFromKeys),\n/* harmony export */   peerIdFromPeerId: () => (/* binding */ peerIdFromPeerId),\n/* harmony export */   peerIdFromString: () => (/* binding */ peerIdFromString)\n/* harmony export */ });\n/* harmony import */ var _libp2p_interface_peer_id__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @libp2p/interface-peer-id */ \"(ssr)/./node_modules/@libp2p/interface-peer-id/dist/src/index.js\");\n/* harmony import */ var _libp2p_interfaces_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @libp2p/interfaces/errors */ \"(ssr)/./node_modules/@libp2p/interfaces/dist/src/errors.js\");\n/* harmony import */ var multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! multiformats/bases/base58 */ \"(ssr)/./node_modules/multiformats/src/bases/base58.js\");\n/* harmony import */ var multiformats_basics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! multiformats/basics */ \"(ssr)/./node_modules/multiformats/src/basics.js\");\n/* harmony import */ var multiformats_cid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! multiformats/cid */ \"(ssr)/./node_modules/multiformats/src/cid.js\");\n/* harmony import */ var multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! multiformats/hashes/digest */ \"(ssr)/./node_modules/multiformats/src/hashes/digest.js\");\n/* harmony import */ var multiformats_hashes_identity__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! multiformats/hashes/identity */ \"(ssr)/./node_modules/multiformats/src/hashes/identity.js\");\n/* harmony import */ var multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! multiformats/hashes/sha2 */ \"(ssr)/./node_modules/multiformats/src/hashes/sha2.js\");\n/* harmony import */ var uint8arrays_equals__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uint8arrays/equals */ \"(ssr)/./node_modules/uint8arrays/dist/src/equals.js\");\n\n\n\n\n\n\n\n\n\nconst inspect = Symbol.for('nodejs.util.inspect.custom');\nconst baseDecoder = Object\n    .values(multiformats_basics__WEBPACK_IMPORTED_MODULE_3__.bases)\n    .map(codec => codec.decoder)\n    // @ts-expect-error https://github.com/multiformats/js-multiformats/issues/141\n    .reduce((acc, curr) => acc.or(curr), multiformats_basics__WEBPACK_IMPORTED_MODULE_3__.bases.identity.decoder);\n// these values are from https://github.com/multiformats/multicodec/blob/master/table.csv\nconst LIBP2P_KEY_CODE = 0x72;\nconst MARSHALLED_ED225519_PUBLIC_KEY_LENGTH = 36;\nconst MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH = 37;\nclass PeerIdImpl {\n    type;\n    multihash;\n    privateKey;\n    publicKey;\n    string;\n    constructor(init) {\n        this.type = init.type;\n        this.multihash = init.multihash;\n        this.privateKey = init.privateKey;\n        // mark string cache as non-enumerable\n        Object.defineProperty(this, 'string', {\n            enumerable: false,\n            writable: true\n        });\n    }\n    get [Symbol.toStringTag]() {\n        return `PeerId(${this.toString()})`;\n    }\n    [_libp2p_interface_peer_id__WEBPACK_IMPORTED_MODULE_0__.symbol] = true;\n    toString() {\n        if (this.string == null) {\n            this.string = multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_2__.base58btc.encode(this.multihash.bytes).slice(1);\n        }\n        return this.string;\n    }\n    // return self-describing String representation\n    // in default format from RFC 0001: https://github.com/libp2p/specs/pull/209\n    toCID() {\n        return multiformats_cid__WEBPACK_IMPORTED_MODULE_4__.CID.createV1(LIBP2P_KEY_CODE, this.multihash);\n    }\n    toBytes() {\n        return this.multihash.bytes;\n    }\n    /**\n     * Returns Multiaddr as a JSON string\n     */\n    toJSON() {\n        return this.toString();\n    }\n    /**\n     * Checks the equality of `this` peer against a given PeerId\n     */\n    equals(id) {\n        if (id instanceof Uint8Array) {\n            return (0,uint8arrays_equals__WEBPACK_IMPORTED_MODULE_8__.equals)(this.multihash.bytes, id);\n        }\n        else if (typeof id === 'string') {\n            return peerIdFromString(id).equals(this);\n        }\n        else if (id?.multihash?.bytes != null) {\n            return (0,uint8arrays_equals__WEBPACK_IMPORTED_MODULE_8__.equals)(this.multihash.bytes, id.multihash.bytes);\n        }\n        else {\n            throw new Error('not valid Id');\n        }\n    }\n    /**\n     * Returns PeerId as a human-readable string\n     * https://nodejs.org/api/util.html#utilinspectcustom\n     *\n     * @example\n     * ```js\n     * import { peerIdFromString } from '@libp2p/peer-id'\n     *\n     * console.info(peerIdFromString('QmFoo'))\n     * // 'PeerId(QmFoo)'\n     * ```\n     */\n    [inspect]() {\n        return `PeerId(${this.toString()})`;\n    }\n}\nclass RSAPeerIdImpl extends PeerIdImpl {\n    type = 'RSA';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'RSA' });\n        this.publicKey = init.publicKey;\n    }\n}\nclass Ed25519PeerIdImpl extends PeerIdImpl {\n    type = 'Ed25519';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'Ed25519' });\n        this.publicKey = init.multihash.digest;\n    }\n}\nclass Secp256k1PeerIdImpl extends PeerIdImpl {\n    type = 'secp256k1';\n    publicKey;\n    constructor(init) {\n        super({ ...init, type: 'secp256k1' });\n        this.publicKey = init.multihash.digest;\n    }\n}\nfunction createPeerId(init) {\n    if (init.type === 'RSA') {\n        return new RSAPeerIdImpl(init);\n    }\n    if (init.type === 'Ed25519') {\n        return new Ed25519PeerIdImpl(init);\n    }\n    if (init.type === 'secp256k1') {\n        return new Secp256k1PeerIdImpl(init);\n    }\n    throw new _libp2p_interfaces_errors__WEBPACK_IMPORTED_MODULE_1__.CodeError('Type must be \"RSA\", \"Ed25519\" or \"secp256k1\"', 'ERR_INVALID_PARAMETERS');\n}\nfunction peerIdFromPeerId(other) {\n    if (other.type === 'RSA') {\n        return new RSAPeerIdImpl(other);\n    }\n    if (other.type === 'Ed25519') {\n        return new Ed25519PeerIdImpl(other);\n    }\n    if (other.type === 'secp256k1') {\n        return new Secp256k1PeerIdImpl(other);\n    }\n    throw new _libp2p_interfaces_errors__WEBPACK_IMPORTED_MODULE_1__.CodeError('Not a PeerId', 'ERR_INVALID_PARAMETERS');\n}\nfunction peerIdFromString(str, decoder) {\n    decoder = decoder ?? baseDecoder;\n    if (str.charAt(0) === '1' || str.charAt(0) === 'Q') {\n        // identity hash ed25519/secp256k1 key or sha2-256 hash of\n        // rsa public key - base58btc encoded either way\n        const multihash = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_5__.decode(multiformats_bases_base58__WEBPACK_IMPORTED_MODULE_2__.base58btc.decode(`z${str}`));\n        if (str.startsWith('12D')) {\n            return new Ed25519PeerIdImpl({ multihash });\n        }\n        else if (str.startsWith('16U')) {\n            return new Secp256k1PeerIdImpl({ multihash });\n        }\n        else {\n            return new RSAPeerIdImpl({ multihash });\n        }\n    }\n    return peerIdFromBytes(baseDecoder.decode(str));\n}\nfunction peerIdFromBytes(buf) {\n    try {\n        const multihash = multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_5__.decode(buf);\n        if (multihash.code === multiformats_hashes_identity__WEBPACK_IMPORTED_MODULE_6__.identity.code) {\n            if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n                return new Ed25519PeerIdImpl({ multihash });\n            }\n            else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n                return new Secp256k1PeerIdImpl({ multihash });\n            }\n        }\n        if (multihash.code === multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_7__.sha256.code) {\n            return new RSAPeerIdImpl({ multihash });\n        }\n    }\n    catch {\n        return peerIdFromCID(multiformats_cid__WEBPACK_IMPORTED_MODULE_4__.CID.decode(buf));\n    }\n    throw new Error('Supplied PeerID CID is invalid');\n}\nfunction peerIdFromCID(cid) {\n    if (cid == null || cid.multihash == null || cid.version == null || (cid.version === 1 && cid.code !== LIBP2P_KEY_CODE)) {\n        throw new Error('Supplied PeerID CID is invalid');\n    }\n    const multihash = cid.multihash;\n    if (multihash.code === multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_7__.sha256.code) {\n        return new RSAPeerIdImpl({ multihash: cid.multihash });\n    }\n    else if (multihash.code === multiformats_hashes_identity__WEBPACK_IMPORTED_MODULE_6__.identity.code) {\n        if (multihash.digest.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n            return new Ed25519PeerIdImpl({ multihash: cid.multihash });\n        }\n        else if (multihash.digest.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n            return new Secp256k1PeerIdImpl({ multihash: cid.multihash });\n        }\n    }\n    throw new Error('Supplied PeerID CID is invalid');\n}\n/**\n * @param publicKey - A marshalled public key\n * @param privateKey - A marshalled private key\n */\nasync function peerIdFromKeys(publicKey, privateKey) {\n    if (publicKey.length === MARSHALLED_ED225519_PUBLIC_KEY_LENGTH) {\n        return new Ed25519PeerIdImpl({ multihash: multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_5__.create(multiformats_hashes_identity__WEBPACK_IMPORTED_MODULE_6__.identity.code, publicKey), privateKey });\n    }\n    if (publicKey.length === MARSHALLED_SECP256K1_PUBLIC_KEY_LENGTH) {\n        return new Secp256k1PeerIdImpl({ multihash: multiformats_hashes_digest__WEBPACK_IMPORTED_MODULE_5__.create(multiformats_hashes_identity__WEBPACK_IMPORTED_MODULE_6__.identity.code, publicKey), privateKey });\n    }\n    return new RSAPeerIdImpl({ multihash: await multiformats_hashes_sha2__WEBPACK_IMPORTED_MODULE_7__.sha256.digest(publicKey), publicKey, privateKey });\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@libp2p/peer-id/dist/src/index.js\n");

/***/ })

};
;